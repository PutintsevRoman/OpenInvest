plugins {
    id 'java-library'
    id 'io.qameta.allure' version '2.9.6'
    id  "io.freefair.lombok" version "6.0.0-m2"
}

repositories {
    mavenCentral()
}

def allureVersion = "2.19.0",
    selenideVersion = "6.5.0",
    junitVersion = "5.8.2"

allure {
    report {
        version.set(allureVersion)
    }
    adapter {
        aspectjWeaver.set(true)
        frameworks {
            junit5 {
                adapterVersion.set(allureVersion)
            }
        }
    }
}

dependencies {
    testImplementation(
            "org.aspectj:aspectjweaver:1.9.6",
            "com.codeborne:selenide:$selenideVersion",
            "io.qameta.allure:allure-selenide:$allureVersion",
            "io.qameta.allure:allure-rest-assured:$allureVersion",
            "io.rest-assured:rest-assured:4.3.1",
            "org.aeonbits.owner:owner:1.0.12",
            "org.assertj:assertj-core:3.19.0",
            "org.slf4j:slf4j-simple:1.7.29",
            'com.codeborne:pdf-test:1.7.0',
            'io.github.bonigarcia:webdrivermanager:5.2.3',
            "org.junit.jupiter:junit-jupiter:$junitVersion")
    implementation("io.qameta.allure:allure-java-commons:2.14.0")
    implementation 'com.github.javafaker:javafaker:1.0.2'
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8
}

tasks.withType(Test) {
    systemProperties(System.getProperties())
    useJUnitPlatform()

    testLogging {
        lifecycle {
            events "started", "skipped", "failed", "standard_error", "standard_out"
            exceptionFormat "short"
        }
    }
}